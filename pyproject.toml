[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "rxio"
version = "0.2.0-dev"
description = "Scalable Reactive Programming in modern Python"
authors = ["Joren Hammudoglu <jhammudoglu@gmail.com>"]
readme = "README.md"
license = "BSD-3-Clause"
repository = "https://github.com/jorenham/rxio"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
hypothesis = "^6.97.6"
pyright = "^1.1.349"
ruff = "^0.2.0"
codespell = "^2.2.6"


[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--exitfirst",
    "--strict-markers",
    "--strict-config",
    "--doctest-modules",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["rxio", "tests"]


[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "strict"
venv = ".venv"
include = ["rxio"]
exclude = [
    "**/__pycache__",
    "**/.pytest_cache",
    "**/.hypothesis",
    "**/.ruff_cache",
    ".vscode",
    ".git",
    ".github",
    "tests"
]
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
disableBytesTypePromotions = true
reportPropertyTypeMismatch = "error"
reportMissingTypeStubs = "warning"
reportImportCycles = "warning"
reportUnusedImport = "warning"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "warning"
reportUntypedNamedTuple = "error"
reportPrivateUsage = "error"
reportTypeCommentUsage = "error"
reportConstantRedefinition = "error"
reportDeprecated = "information"
reportInconsistentConstructor = "error"
reportMissingSuperCall = "error"
reportUninitializedInstanceVariable = "error"
reportUnknownParameterType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownVariableType = "warning"
reportUnknownMemberType = "warning"
reportInvalidTypeVarUse = "error"
reportCallInDefaultInitializer = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportImplicitStringConcatenation = "warning"
reportInvalidStubStatement = "error"
reportIncompleteStub = "error"
reportUnusedCallResult = "warning"
reportUnusedExpression = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "error"
reportImplicitOverride = "error"
reportShadowedImports = "error"


[tool.ruff]
src = ["rxio"]
target-version = "py312"
line-length = 79
indent-width = 4
force-exclude = true
extend-exclude = [
    ".github",
    ".vscode",
    "py.typed",
    "experments",
]

[tool.ruff.lint]
ignore-init-module-imports = true
preview = true
select = [
    "F",        # pyflakes
    "E",        # pycodestyle error
    "W",        # pycodestyle warning
    "C90",      # mccabe
    "I",        # isort
    "N",        # pep8-naming
    "D",        # pydocstyle
    "UP",       # pyupgrade
    "YTT",      # flake8-2020
    "ANN",      # flake8-annotations
    "ASYNC",    # flake8-async
    "S",        # flake8-bandit
    "BLE",      # flake8-blind-except
    "B",        # flake8-bugbear
    "A",        # flake8-builtins
    "COM",      # flake8-commas
    "C4",       # flake8-comprehensions
    "DTZ",      # flake8-datetimez
    "T10",      # flake8-debugger
    "EM",       # flake8-errmsg
    "EXE",      # flake8-executable
    "FA",       # flake8-future-annotations
    "ISC",      # flake8-implicit-str-concat
    "ICN",      # flake8-import-conventions
    "G",        # flake8-logging-format
    "INP",      # flake8-no-pep420
    "PIE",      # flake8-pie
    "T20",      # flake8-print
    "PYI",      # flake8-pyi
    "PT",       # flake8-pytest-style
    "Q",        # flake8-quotes
    "RSE",      # flake8-raise
    "RET",      # flake8-return
    "SLF",      # flake8-self
    "SLOT",     # flake8-slots
    "SIM",      # flake8-simplify
    "TID",      # flake8-tidy-imports
    "TCH",      # flake8-type-checking
    "ARG",      # flake8-unused-arguments
    "PTH",      # flake8-use-pathlib
    "ERA",      # eradicate
    "PGH",      # pygrep-hooks
    "PL",       # pylint
    "TRY",      # tryceratops
    "FLY",      # flynt
    "PERF",     # perflint,
    "FURB",     # refurb
    "LOG",      # flake8-logging
    "RUF",      # ruff
]
extend-ignore = [
    # flake8-annotations
    "ANN001",   # missing-type-function-argument (deprecated)
    "ANN002",   # missing-type-args (deprecated)
    # pydocstyle
    "D100",     # undocumented-public-module
    "D104",     # undocumented-public-package
    "D205",     # blank-line-after-summary
    "D212",     # multi-line-summary-first-line
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",        # pydocstyle
    "ANN",      # flake8-annotations
    "S101",     # flake8-bandit: assert
]

[tool.ruff.lint.pycodestyle]
max-line-length = 79

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["rxio"]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "single"
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = true


[tool.codespell]
skip = './dist,./site,*.lock,*.pyc,'
context = 2
